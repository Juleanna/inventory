# Generated by Django 4.2.23 on 2025-08-07 10:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('licenses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='software',
            name='license',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='licenses.license', verbose_name='Лицензія'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='purchase_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseorder', verbose_name='Замовлення'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='spare_part',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.sparepart', verbose_name='Запчастина'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_orders', to=settings.AUTH_USER_MODEL, verbose_name='Схвалено користувачем'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_orders', to=settings.AUTH_USER_MODEL, verbose_name='Створено користувачем'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.supplier', verbose_name='Постачальник'),
        ),
        migrations.AddField(
            model_name='peripheraldevice',
            name='connected_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.equipment', verbose_name='Підключено до'),
        ),
        migrations.AddField(
            model_name='notification',
            name='equipment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.equipment', verbose_name='Обладнання'),
        ),
        migrations.AddField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Користувач'),
        ),
        migrations.AddField(
            model_name='maintenancetask',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Призначено'),
        ),
        migrations.AddField(
            model_name='maintenancetask',
            name='maintenance_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='inventory.maintenancerequest', verbose_name='Запит на ТО'),
        ),
        migrations.AddField(
            model_name='maintenanceschedule',
            name='equipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_schedules', to='inventory.equipment', verbose_name='Обладнання'),
        ),
        migrations.AddField(
            model_name='maintenanceschedule',
            name='responsible_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Відповідальна особа'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_maintenance', to=settings.AUTH_USER_MODEL, verbose_name='Схвалено користувачем'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='assigned_technician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_maintenance', to=settings.AUTH_USER_MODEL, verbose_name='Призначений технік'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='equipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='inventory.equipment', verbose_name='Обладнання'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='requester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to=settings.AUTH_USER_MODEL, verbose_name='Заявник'),
        ),
        migrations.AddField(
            model_name='historicalequipment',
            name='current_user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Поточний користувач'),
        ),
        migrations.AddField(
            model_name='historicalequipment',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalequipment',
            name='responsible_person',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Відповідальна особа'),
        ),
        migrations.AddField(
            model_name='equipmentdocument',
            name='equipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_documents', to='inventory.equipment', verbose_name='Обладнання'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='current_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_equipment', to=settings.AUTH_USER_MODEL, verbose_name='Поточний користувач'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='related_equipments', to='inventory.equipmentdocument', verbose_name='Документи'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='responsible_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_equipment', to=settings.AUTH_USER_MODEL, verbose_name='Відповідальна особа'),
        ),
        migrations.AddField(
            model_name='customdashboard',
            name='shared_with',
            field=models.ManyToManyField(blank=True, related_name='shared_dashboards', to=settings.AUTH_USER_MODEL, verbose_name='Спільний доступ з користувачами'),
        ),
        migrations.AddField(
            model_name='customdashboard',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_dashboards', to=settings.AUTH_USER_MODEL, verbose_name='Користувач'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'action_type'], name='inventory_u_user_id_adb235_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['timestamp'], name='inventory_u_timesta_f5f8e2_idx'),
        ),
        migrations.AddIndex(
            model_name='sparepart',
            index=models.Index(fields=['part_number'], name='inventory_s_part_nu_c29b96_idx'),
        ),
        migrations.AddIndex(
            model_name='sparepart',
            index=models.Index(fields=['status'], name='inventory_s_status_90dff0_idx'),
        ),
        migrations.AddIndex(
            model_name='sparepart',
            index=models.Index(fields=['quantity_in_stock'], name='inventory_s_quantit_38d443_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='purchaseorderitem',
            unique_together={('purchase_order', 'spare_part')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'read'], name='inventory_n_user_id_a664f2_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='inventory_n_created_c407b9_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancerequest',
            index=models.Index(fields=['equipment', 'status'], name='inventory_m_equipme_7d05cb_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancerequest',
            index=models.Index(fields=['assigned_technician', 'status'], name='inventory_m_assigne_bf0ce3_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancerequest',
            index=models.Index(fields=['scheduled_date'], name='inventory_m_schedul_09f5f4_idx'),
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['category', 'status'], name='inventory_e_categor_5c8886_idx'),
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['location', 'status'], name='inventory_e_locatio_7dc5ef_idx'),
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['current_user', 'status'], name='inventory_e_current_40a80f_idx'),
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['purchase_date'], name='inventory_e_purchas_e330c3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customdashboard',
            unique_together={('user', 'name')},
        ),
    ]
