# Generated by Django 5.2 on 2025-05-02 08:04

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название оборудования')),
                ('category', models.CharField(choices=[('PC', 'Стационарный ПК'), ('WORK', 'Рабочая станция'), ('SRV', 'Сервер'), ('PRN', 'Принтер'), ('LAPTOP', 'Ноутбук'), ('OTH', 'Другое')], max_length=6, verbose_name='Категория')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Модель устройства')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Производитель')),
                ('serial_number', models.CharField(max_length=255, unique=True, verbose_name='Серийный номер')),
                ('unique_serial_number', models.CharField(max_length=255, verbose_name='Уникальный серийный номер')),
                ('mac_address', models.CharField(blank=True, max_length=17, null=True, verbose_name='MAC-адрес')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Дата покупки')),
                ('location', models.CharField(max_length=255, verbose_name='Местоположение')),
                ('status', models.CharField(choices=[('WORKING', 'Рабочее'), ('REPAIR', 'Ремонт'), ('DISPOSED', 'Списано')], default='WORKING', max_length=30, verbose_name='Состояние')),
                ('last_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Дата последнего обслуживания')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Дата истечения срока службы')),
                ('warranty_until', models.DateField(blank=True, null=True, verbose_name='Гарантия до')),
                ('supplier', models.CharField(blank=True, max_length=100, null=True, verbose_name='Поставщик')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена покупки')),
                ('cpu', models.CharField(blank=True, max_length=100, null=True, verbose_name='CPU')),
                ('ram', models.CharField(blank=True, max_length=100, null=True, verbose_name='RAM')),
                ('storage', models.CharField(blank=True, max_length=100, null=True, verbose_name='SSD/HDD')),
                ('gpu', models.CharField(blank=True, max_length=100, null=True, verbose_name='GPU')),
                ('operating_system', models.CharField(blank=True, max_length=100, null=True, verbose_name='Операционная система')),
                ('barcode_image', models.ImageField(blank=True, null=True, upload_to='barcodes/')),
                ('qrcode_image', models.ImageField(blank=True, null=True, upload_to='qrcodes/')),
                ('current_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Текущий пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='documents/%Y/%m/%d/', verbose_name='Файл документа')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Описание')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_documents', to='inventory.equipment', verbose_name='Оборудование')),
            ],
        ),
        migrations.AddField(
            model_name='equipment',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='related_equipments', to='inventory.equipmentdocument', verbose_name='Документы'),
        ),
        migrations.CreateModel(
            name='HistoricalEquipment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название оборудования')),
                ('category', models.CharField(choices=[('PC', 'Стационарный ПК'), ('WORK', 'Рабочая станция'), ('SRV', 'Сервер'), ('PRN', 'Принтер'), ('LAPTOP', 'Ноутбук'), ('OTH', 'Другое')], max_length=6, verbose_name='Категория')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Модель устройства')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Производитель')),
                ('serial_number', models.CharField(db_index=True, max_length=255, verbose_name='Серийный номер')),
                ('unique_serial_number', models.CharField(max_length=255, verbose_name='Уникальный серийный номер')),
                ('mac_address', models.CharField(blank=True, max_length=17, null=True, verbose_name='MAC-адрес')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Дата покупки')),
                ('location', models.CharField(max_length=255, verbose_name='Местоположение')),
                ('status', models.CharField(choices=[('WORKING', 'Рабочее'), ('REPAIR', 'Ремонт'), ('DISPOSED', 'Списано')], default='WORKING', max_length=30, verbose_name='Состояние')),
                ('last_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Дата последнего обслуживания')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Дата истечения срока службы')),
                ('warranty_until', models.DateField(blank=True, null=True, verbose_name='Гарантия до')),
                ('supplier', models.CharField(blank=True, max_length=100, null=True, verbose_name='Поставщик')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена покупки')),
                ('cpu', models.CharField(blank=True, max_length=100, null=True, verbose_name='CPU')),
                ('ram', models.CharField(blank=True, max_length=100, null=True, verbose_name='RAM')),
                ('storage', models.CharField(blank=True, max_length=100, null=True, verbose_name='SSD/HDD')),
                ('gpu', models.CharField(blank=True, max_length=100, null=True, verbose_name='GPU')),
                ('operating_system', models.CharField(blank=True, max_length=100, null=True, verbose_name='Операционная система')),
                ('barcode_image', models.TextField(blank=True, max_length=100, null=True)),
                ('qrcode_image', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('current_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Текущий пользователь')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical equipment',
                'verbose_name_plural': 'historical equipments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(choices=[('NEW_ITEM', 'Новый предмет добавлен'), ('ITEM_UPDATED', 'Предмет обновлен'), ('ITEM_EXPIRED', 'Предмет истек по сроку службы')], max_length=100)),
                ('read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PeripheralDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название устройства')),
                ('type', models.CharField(max_length=255, verbose_name='Тип устройства')),
                ('serial_number', models.CharField(max_length=255, unique=True, verbose_name='Серийный номер')),
                ('connected_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.equipment', verbose_name='Подключено к')),
            ],
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название ПО')),
                ('version', models.CharField(max_length=50, verbose_name='Версия')),
                ('vendor', models.CharField(max_length=255, verbose_name='Производитель')),
                ('installed_on', models.ManyToManyField(blank=True, to='inventory.equipment', verbose_name='Установлено на')),
            ],
        ),
    ]
